#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatosLINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OBJ_REDES")]
	public partial class OBJ_REDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActividade(Actividade instance);
    partial void UpdateActividade(Actividade instance);
    partial void DeleteActividade(Actividade instance);
    partial void InsertPregunta(Pregunta instance);
    partial void UpdatePregunta(Pregunta instance);
    partial void DeletePregunta(Pregunta instance);
    partial void InsertRespuesta(Respuesta instance);
    partial void UpdateRespuesta(Respuesta instance);
    partial void DeleteRespuesta(Respuesta instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public OBJ_REDDataContext() : 
				base(global::DatosLINQ.Properties.Settings.Default.OBJ_REDESConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OBJ_REDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OBJ_REDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OBJ_REDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OBJ_REDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividade> Actividades
		{
			get
			{
				return this.GetTable<Actividade>();
			}
		}
		
		public System.Data.Linq.Table<Det_Actividad_Usuario> Det_Actividad_Usuarios
		{
			get
			{
				return this.GetTable<Det_Actividad_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Pregunta> Preguntas
		{
			get
			{
				return this.GetTable<Pregunta>();
			}
		}
		
		public System.Data.Linq.Table<Respuesta> Respuestas
		{
			get
			{
				return this.GetTable<Respuesta>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividades")]
	public partial class Actividade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tipo;
		
		private EntitySet<Pregunta> _Preguntas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Actividade()
		{
			this._Preguntas = new EntitySet<Pregunta>(new Action<Pregunta>(this.attach_Preguntas), new Action<Pregunta>(this.detach_Preguntas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividade_Pregunta", Storage="_Preguntas", ThisKey="ID", OtherKey="FK_Actividad")]
		public EntitySet<Pregunta> Preguntas
		{
			get
			{
				return this._Preguntas;
			}
			set
			{
				this._Preguntas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.Actividade = this;
		}
		
		private void detach_Preguntas(Pregunta entity)
		{
			this.SendPropertyChanging();
			entity.Actividade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Det_Actividad_Usuario")]
	public partial class Det_Actividad_Usuario
	{
		
		private int _FK_Actividad;
		
		private int _FK_Usuario;
		
		private bool _Creador;
		
		private System.Nullable<double> _Calificacion;
		
		private System.DateTime _Fecha_Realizacion;
		
		public Det_Actividad_Usuario()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Actividad", DbType="Int NOT NULL")]
		public int FK_Actividad
		{
			get
			{
				return this._FK_Actividad;
			}
			set
			{
				if ((this._FK_Actividad != value))
				{
					this._FK_Actividad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Usuario", DbType="Int NOT NULL")]
		public int FK_Usuario
		{
			get
			{
				return this._FK_Usuario;
			}
			set
			{
				if ((this._FK_Usuario != value))
				{
					this._FK_Usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creador", DbType="Bit NOT NULL")]
		public bool Creador
		{
			get
			{
				return this._Creador;
			}
			set
			{
				if ((this._Creador != value))
				{
					this._Creador = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calificacion", DbType="Float")]
		public System.Nullable<double> Calificacion
		{
			get
			{
				return this._Calificacion;
			}
			set
			{
				if ((this._Calificacion != value))
				{
					this._Calificacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Realizacion", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Fecha_Realizacion
		{
			get
			{
				return this._Fecha_Realizacion;
			}
			set
			{
				if ((this._Fecha_Realizacion != value))
				{
					this._Fecha_Realizacion = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preguntas")]
	public partial class Pregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Reactivo;
		
		private int _FK_Actividad;
		
		private EntitySet<Respuesta> _Respuestas;
		
		private EntityRef<Actividade> _Actividade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReactivoChanging(string value);
    partial void OnReactivoChanged();
    partial void OnFK_ActividadChanging(int value);
    partial void OnFK_ActividadChanged();
    #endregion
		
		public Pregunta()
		{
			this._Respuestas = new EntitySet<Respuesta>(new Action<Respuesta>(this.attach_Respuestas), new Action<Respuesta>(this.detach_Respuestas));
			this._Actividade = default(EntityRef<Actividade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reactivo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reactivo
		{
			get
			{
				return this._Reactivo;
			}
			set
			{
				if ((this._Reactivo != value))
				{
					this.OnReactivoChanging(value);
					this.SendPropertyChanging();
					this._Reactivo = value;
					this.SendPropertyChanged("Reactivo");
					this.OnReactivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Actividad", DbType="Int NOT NULL")]
		public int FK_Actividad
		{
			get
			{
				return this._FK_Actividad;
			}
			set
			{
				if ((this._FK_Actividad != value))
				{
					if (this._Actividade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ActividadChanging(value);
					this.SendPropertyChanging();
					this._FK_Actividad = value;
					this.SendPropertyChanged("FK_Actividad");
					this.OnFK_ActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Respuesta", Storage="_Respuestas", ThisKey="ID", OtherKey="FK_Pregunta")]
		public EntitySet<Respuesta> Respuestas
		{
			get
			{
				return this._Respuestas;
			}
			set
			{
				this._Respuestas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividade_Pregunta", Storage="_Actividade", ThisKey="FK_Actividad", OtherKey="ID", IsForeignKey=true)]
		public Actividade Actividade
		{
			get
			{
				return this._Actividade.Entity;
			}
			set
			{
				Actividade previousValue = this._Actividade.Entity;
				if (((previousValue != value) 
							|| (this._Actividade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actividade.Entity = null;
						previousValue.Preguntas.Remove(this);
					}
					this._Actividade.Entity = value;
					if ((value != null))
					{
						value.Preguntas.Add(this);
						this._FK_Actividad = value.ID;
					}
					else
					{
						this._FK_Actividad = default(int);
					}
					this.SendPropertyChanged("Actividade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Respuestas(Respuesta entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = this;
		}
		
		private void detach_Respuestas(Respuesta entity)
		{
			this.SendPropertyChanging();
			entity.Pregunta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Respuestas")]
	public partial class Respuesta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Respuesta1;
		
		private int _FK_Pregunta;
		
		private EntityRef<Pregunta> _Pregunta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRespuesta1Changing(string value);
    partial void OnRespuesta1Changed();
    partial void OnFK_PreguntaChanging(int value);
    partial void OnFK_PreguntaChanged();
    #endregion
		
		public Respuesta()
		{
			this._Pregunta = default(EntityRef<Pregunta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Respuesta", Storage="_Respuesta1", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Respuesta1
		{
			get
			{
				return this._Respuesta1;
			}
			set
			{
				if ((this._Respuesta1 != value))
				{
					this.OnRespuesta1Changing(value);
					this.SendPropertyChanging();
					this._Respuesta1 = value;
					this.SendPropertyChanged("Respuesta1");
					this.OnRespuesta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Pregunta", DbType="Int NOT NULL")]
		public int FK_Pregunta
		{
			get
			{
				return this._FK_Pregunta;
			}
			set
			{
				if ((this._FK_Pregunta != value))
				{
					if (this._Pregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PreguntaChanging(value);
					this.SendPropertyChanging();
					this._FK_Pregunta = value;
					this.SendPropertyChanged("FK_Pregunta");
					this.OnFK_PreguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pregunta_Respuesta", Storage="_Pregunta", ThisKey="FK_Pregunta", OtherKey="ID", IsForeignKey=true)]
		public Pregunta Pregunta
		{
			get
			{
				return this._Pregunta.Entity;
			}
			set
			{
				Pregunta previousValue = this._Pregunta.Entity;
				if (((previousValue != value) 
							|| (this._Pregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pregunta.Entity = null;
						previousValue.Respuestas.Remove(this);
					}
					this._Pregunta.Entity = value;
					if ((value != null))
					{
						value.Respuestas.Add(this);
						this._FK_Pregunta = value.ID;
					}
					else
					{
						this._FK_Pregunta = default(int);
					}
					this.SendPropertyChanged("Pregunta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Correo;
		
		private System.DateTime _Fecha_Nacimiento;
		
		private string _Password;
		
		private string _Tipo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnFecha_NacimientoChanging(System.DateTime value);
    partial void OnFecha_NacimientoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Nacimiento", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Fecha_Nacimiento
		{
			get
			{
				return this._Fecha_Nacimiento;
			}
			set
			{
				if ((this._Fecha_Nacimiento != value))
				{
					this.OnFecha_NacimientoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Nacimiento = value;
					this.SendPropertyChanged("Fecha_Nacimiento");
					this.OnFecha_NacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
